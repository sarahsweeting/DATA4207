),
list(
values = values.190,
chars = v190_gone_without_medicine
),
list(
values = values.5,
chars = v5_friends
)
)
# Combine data into a dataframe
Question.key <- bind_rows(lapply(1:length(categories), function(i) {
data.frame(
Categories = rep(categories[i], length(vectors[[i]]$values)),
Question.Number = rep(questions[i], length(vectors[[i]]$values)),
Codebook = rep(key[i], length(vectors[[i]]$values)),
Question.values = vectors[[i]]$values,
Question.chars = vectors[[i]]$chars
)
}))
survey.predictors <- data.frame(
education = survey.data$Q275,
employment = survey.data$V249,
security = survey.data$V170,
rights = survey.data$V142,
health = survey.data$V190,
social = survey.data$V5
)
summary = describe(survey.predictors)
print(summary)
summary = describe(survey.predictors)
print(summary)
# This function creates bar plot for a predictor and fills in the character values for the labels
plot_barplots <- function(column, name, values_fill) {
ggplot(survey.data, aes(x = factor(!!column), fill = factor(!!column))) +
geom_bar() +
labs(title = "Distribution", x = name, fill = name, y = "Count") +
scale_fill_brewer(palette = "Spectral") +
theme(axis.text.x = element_blank(), axis.ticks.x = element_blank())
}
# This loop goes through the dataframe and applys the function to create bar plots for each predictor
unique_codebooks <- unique(Question.key$Codebook)
for (codebook in unique_codebooks) {
subset_data <- filter(Question.key, Codebook == codebook)
print(plot_barplots(column = sym(codebook), name = unique(subset_data$Categories), values_fill = unique(subset_data$Question.chars)))
}
survey.data <- survey.data %>%
mutate(happiness = dplyr::recode(V10,
'1' = 4,
'2' = 3,
'3' = 2,
'4' = 1,
'-2' = NULL),
health = dplyr::recode(V11,
'1' = 5,
'2' = 4,
'3' = 3,
'4' = 2,
'5' = 1,
'-2' = NULL),
finances = dplyr::recode(V59,
'-2' = NULL,
.default = V59),
satisfaction = dplyr::recode(V23,
'-2' = NULL,
.default = V23),
freedom = dplyr::recode(V55,
'-2' = NULL,
.default = V55))
fa.fit <- fa(survey.data[,c("happiness",
"health",
"finances",
"satisfaction",
"freedom")],
nfactors=1)
survey.data$life.quality <- as.numeric(fa.fit$scores)
fa.fit
summary(survey.data$life.quality)
survey.data = drop_na(survey.data, life.quality)
ggplot(survey.data, aes(life.quality)) +
geom_histogram(fill = 'black') +
theme_minimal()
describe(survey.data$life.quality)
ggplot(survey.data, aes(x=life.quality, y=V249, fill = V249)) +
geom_boxplot() +
xlab("Life Quality") +
ylab("Employment categories") +
scale_fill_brewer(palette = "Spectral") +
theme(legend.position = "None")
ggplot(survey.data, aes(x=life.quality, y=V249, fill = V249)) +
geom_boxplot() +
xlab("Life Quality") +
ylab("Employment categories") +
scale_fill_brewer(palette = "Spectral") +
theme(legend.position = "None")
View(Question.key)
## creating a new data frame that will store the independant variables we are testing.
survey.predictors <- data.frame(
education = survey.data$Q275,
employment = survey.data$V249,
security = survey.data$V170,
rights = survey.data$V142,
health = survey.data$V190,
social = survey.data$V5,
life.qual = survey.data$life.qual
)
## including the categorical answers
#### Employment Q279: Are you employed now or not? If yes, about how many hours a week do you work? If you have more than one job, please tell us about your main job only.
survey.predictors$emp_cat <- recode(survey.data$V249,
`-2` = "No answer",
`1` = "Full time employee (30 hours a week or more)",
`2` = "Part time employee (less than 30 hours a week)",
`3` = "Self-employed",
`4` = "Retired / On a pension",
`5` = "Home duties, not otherwise employed",
`6` = "Student",
`7` = "Unemployed",
`8` = "Other (please specify)")
#### Education - Q275: What is your highest educational level that you have attained?
survey.predictors$edu_cat <- recode(survey.data$Q275,
`-2` = "No answer",
`1` = "No formal education",
`2` = "Primary education only",
`3` = "Lower secondary education (i.e. Year 9 or less)",
`4` = "Upper secondary education (i.e. between Year 10 and Year 12)",
`5` = "Post-secondary non-tertiary education (e.g. apprenticeship or certificate)",
`7` = "Bachelor or equivalent",
`8` = "Master or equivalent",
`9` = "Doctoral or equivalent")
#### Security - Q131: how secure do you feel these days?
survey.predictors$secure_cat <- recode(survey.data$V170,
`-2` = "No answer",
`1` = "Very secure",
`2` = "Quite secure",
`3` = "Not very secure",
`4` = "Not at all secure")
#### Human Rights - Q253: How much respect is there for individual human rights nowadays in this country? Do you feel there is…
survey.predictors$rights_cat <- recode(survey.data$V142,
`-2` = "No answer",
`1` = "A great deal of respect",
`2` = "Some respect",
`3` = "Not much respect",
`4` = "No respect at all")
#### Health Levels - Q53: "In the last 12 months, how often have you or your family gone without medicine or medical treatment that you needed?
survey.predictors$health_cat <- recode(survey.data$V190,
`-2` = "No answer",
`1` = "Often",
`2` = "Sometimes",
`3` = "Rarely",
`4` = "Never")
#### Social & Personal Connectivity - Q2. For each of the following, indicate how important it is in your life. How important is… Family, Friends
survey.predictors$social_cat <- recode(survey.data$V5,
`-2` = "No answer",
`1` = "Very important",
`2` = "Rather important",
`3` = "Not very important",
`4` = "Not at all important")
ggplot(survey.data, aes(x=life.quality, y=V249, fill = V249)) +
geom_boxplot() +
xlab("Life Quality") +
ylab("Employment categories") +
scale_fill_brewer(palette = "Spectral") +
theme(legend.position = "None")
ggplot(survey.data, aes(x=life.quality, y=survey.predictors$emp_cat, fill = V249)) +
geom_boxplot() +
xlab("Life Quality") +
ylab("Employment categories") +
scale_fill_brewer(palette = "Spectral") +
theme(legend.position = "None")
ggplot(survey.data, aes(x=survey.predictors$life.qual, y=survey.predictors$emp_cat, fill = survey.predictors$emp_cat)) +
geom_boxplot() +
xlab("Life Quality") +
ylab("Employment categories") +
scale_fill_brewer(palette = "Spectral") +
theme(legend.position = "None")
ggplot(survey.data, aesaes(x=survey.predictors$life.qual, y=survey.predictors$edu_cat, fill = survey.predictors$edu_cat)) +
geom_boxplot() +
xlab("Life Quality") +
ylab("Education categories") +
scale_fill_brewer(palette = "Spectral") +
theme(legend.position = "None")
ggplot(survey.data, aes(x=survey.predictors$life.qual, y=survey.predictors$edu_cat, fill = survey.predictors$edu_cat)) +
geom_boxplot() +
xlab("Life Quality") +
ylab("Education categories") +
scale_fill_brewer(palette = "Spectral") +
theme(legend.position = "None")
ggplot(survey.data, aes(x=survey.predictors$life.qual, y=survey.predictors$secure_cat, fill = survey.predictors$secure_cat)) +
geom_boxplot() +
xlab("Life Quality") +
ylab("Security categories") +
scale_fill_brewer(palette = "Spectral") +
theme(legend.position = "None")
ggplot(survey.data, aes(x=survey.predictors$life.qual, y=survey.predictors$rights_cat, fill = survey.predictors$rights_cat)) +
geom_boxplot() +
xlab("Life Quality") +
ylab("Human Rights categories") +
scale_fill_brewer(palette = "Spectral") +
theme(legend.position = "None")
ggplot(survey.data, aes(x=survey.predictors$life.qual, y=survey.predictors$health_cat, fill = survey.predictors$health_cat)) +
geom_boxplot() +
xlab("Life Quality") +
ylab("Health Treatment categories") +
scale_fill_brewer(palette = "Spectral") +
theme(legend.position = "None")
ggplot(survey.data, aes(x=survey.predictors$life.qual, y=survey.predictors$social_cat, fill = survey.predictors$social_cat)) +
geom_boxplot() +
xlab("Life Quality") +
ylab("Friendship categories") +
scale_fill_brewer(palette = "Spectral") +
theme(legend.position = "None")
knitr::opts_chunk$set(echo = TRUE, message = FALSE, warning = FALSE, eval = FALSE)
install.packages("tinytex")
# then - RUNNING IT IN THE CONSOLE: tinytex::install_tinytex()
getwd()
# if missing a package : install.packages("[name_of_package]")
library(tidyverse)
library(scales)
library(foreign)
library(haven)
library(arm)
# install.packages("haven")
# install.packages("arm")
earnings.data = read.dta("Data/Earnings/earnings.dta")
getwd()
# if missing a package : install.packages("[name_of_package]")
library(tidyverse)
library(scales)
library(foreign)
library(haven)
library(arm)
# install.packages("haven")
# install.packages("arm")
earnings.data = read.dta("Data/earnings.dta")
getwd()
# if missing a package : install.packages("[name_of_package]")
library(tidyverse)
library(scales)
library(foreign)
library(haven)
library(arm)
# install.packages("haven")
# install.packages("arm")
earnings.data = read.dta("Data/Earnings/earnings.dta")
getwd()
# if missing a package : install.packages("[name_of_package]")
library(tidyverse)
library(scales)
library(foreign)
library(haven)
library(arm)
# install.packages("haven")
# install.packages("arm")
earnings.data = read.dta("Earnings/earnings.dta")
coef(earnings.model)['(Intercept)'] +
coef(earnings.model)['height'] * c(66, 72, 78)
height.data = data.frame(height = c(66, 72, 78, 90))
earnings.data$height.quintile =
cut(earnings.data$height,
breaks = c(quantile(earnings.data$height,
probs = seq(0, 1, by = .2), na.rm = T)),
labels = c("1st", "2nd", "3rd", "4th", "5th"),
include.lowest = T)
earnings.data$height.quintile
# first we have to filter to remove any missing values for height.quintiles
earnings.data %>%
filter(!is.na(earn) & !is.na(height.quintile)) %>%
ggplot(aes(earn)) +
geom_histogram() +
labs(x = "Earnings",
y = "Count") +
scale_x_continuous(labels = dollar,
breaks = c(0, 100000)) +
facet_wrap(~ height.quintile) +
theme(panel.background = element_blank())
earnings.data = earnings.data %>%
# Make the coefficients for this interpretable in the regression table
mutate(gender = dplyr::recode(sex,
"1" = "Male",
"2" = "Female"),
# create an age variable - survey was fielded in 1991
age = 91 - yearbn,
# And those born in 1899 are 92!
age = ifelse(age == -8, 92, age),
# We aggregate "asian" and "native American" as they are too small to include in a model
race2 = dplyr::recode(race,
"1" = "White",
"2" = "Black",
"3" = "Other",
"4" = "Other",
"9" = NULL),
# Our data didn't include "hispanic" in the race variable!
race2 = ifelse(hisp == 1, "Hispanic", race2))
earnings.data$race2 = relevel(as.factor(earnings.data$race2), ref = "White")
#model with height in millimetres
Coefficients:
(Intercept)    height.mm
# Don't forget to divide by 2!!!
earnings.data$z.height = scale(earnings.data$height) / 2
earnings.data$z.age = scale(earnings.data$age) / 2
# perhaps let's not include `ed`
earnings.model2 = lm(earn ~ z.height + z.age + gender + race2,
data = earnings.data)
display(earnings.model2)
# Model diagnostics
plot(earnings.model2)
earnings.data
glimpse(earnings.data)
head(earnings.data)
##Dropping the non answers as this will no help our regression model as it provides no information.
survey.predictors2 = drop_na(survey.predictors, life.qual)
survey.predictors2 <- survey.predictors2[!(survey.predictors2$education == -2 |
survey.predictors2$employment == -2 |
survey.predictors2$security == -2 |
survey.predictors2$rights == -2 |
survey.predictors2$health == -2 |
survey.predictors2$social == -2 )  ,]
scaled_df <- survey.predictors2 %>%
mutate(
scaled_education = scale(education),
scaled_employment = scale(employment),
scaled_security = scale(security),
scaled_rights = scale(rights),
scaled_health = scale(health) ,
scaled_social = scale(social) ,
scaled_life = scale(life.qual)
)
# Then run the regression model on the new dataframe:
regmodel <- lm(life.qual ~ emp_cat + edu_cat + scaled_security + scaled_rights + scaled_health + scaled_social , data = scaled_df)
# Summarise the regression model
summary(regmodel)
# Then run the regression model on the new dataframe:
model2 <- lm(life.qual ~ emp_cat + edu_cat + secure_cat + rights_cat + health_cat + social_cat , data = survey.predictors2)
# Summarise the regression model
summary(model2)
survey.predictors2$emp_cat = relevel(as.factor(survey.predictors2$emp_cat), ref = "Full time employee (30 hours a week or more)")
survey.predictors2$edu_cat = relevel(as.factor(survey.predictors2$edu_cat), ref = "Bachelor or equivalent")
survey.predictors2$secure_cat = relevel(as.factor(survey.predictors2$secure_cat), ref = "Quite secure")
survey.predictors2$rights_cat = relevel(as.factor(survey.predictors2$rights_cat), ref = "Some respect")
survey.predictors2$health_cat = relevel(as.factor(survey.predictors2$health_cat), ref = "Never")
survey.predictors2$social_cat = relevel(as.factor(survey.predictors2$social_cat), ref = "Very important")
# Then run the regression model on the new dataframe:
model2 <- lm(life.qual ~ emp_cat + edu_cat + secure_cat + rights_cat + health_cat + social_cat , data = survey.predictors2)
# Summarise the regression model
summary(model2)
install.packages("stargazer")
knitr::opts_chunk$set(echo = FALSE)
library(readxl)
library(dplyr)
library(ggplot2)
library(psych)
library(tidyr)
library(MASS)
library(stargazer)
##Dropping the non answers as this will no help our regression model as it provides no information.
survey.predictors2 = drop_na(survey.predictors, life.qual)
survey.predictors2 <- survey.predictors2[!(survey.predictors2$education == -2 |
survey.predictors2$employment == -2 |
survey.predictors2$security == -2 |
survey.predictors2$rights == -2 |
survey.predictors2$health == -2 |
survey.predictors2$social == -2 )  ,]
scaled_df <- survey.predictors2 %>%
mutate(
scaled_education = scale(education),
scaled_employment = scale(employment),
scaled_security = scale(security),
scaled_rights = scale(rights),
scaled_health = scale(health) ,
scaled_social = scale(social) ,
scaled_life = scale(life.qual)
)
# Then run the regression model on the new dataframe:
regmodel <- lm(life.qual ~ emp_cat + edu_cat + scaled_security + scaled_rights + scaled_health + scaled_social , data = scaled_df)
# Summarise the regression model
stargazer(regmodel, title = "Regression Results")
##Dropping the non answers as this will no help our regression model as it provides no information.
survey.predictors2 = drop_na(survey.predictors, life.qual)
survey.predictors2 <- survey.predictors2[!(survey.predictors2$education == -2 |
survey.predictors2$employment == -2 |
survey.predictors2$security == -2 |
survey.predictors2$rights == -2 |
survey.predictors2$health == -2 |
survey.predictors2$social == -2 )  ,]
scaled_df <- survey.predictors2 %>%
mutate(
scaled_education = scale(education),
scaled_employment = scale(employment),
scaled_security = scale(security),
scaled_rights = scale(rights),
scaled_health = scale(health) ,
scaled_social = scale(social) ,
scaled_life = scale(life.qual)
)
# Then run the regression model on the new dataframe:
regmodel <- lm(life.qual ~ emp_cat + edu_cat + scaled_security + scaled_rights + scaled_health + scaled_social , data = scaled_df)
# Summarise the regression model
stargazer(regmodel, type="text" title = "Regression Results")
##Dropping the non answers as this will no help our regression model as it provides no information.
survey.predictors2 = drop_na(survey.predictors, life.qual)
survey.predictors2 <- survey.predictors2[!(survey.predictors2$education == -2 |
survey.predictors2$employment == -2 |
survey.predictors2$security == -2 |
survey.predictors2$rights == -2 |
survey.predictors2$health == -2 |
survey.predictors2$social == -2 )  ,]
scaled_df <- survey.predictors2 %>%
mutate(
scaled_education = scale(education),
scaled_employment = scale(employment),
scaled_security = scale(security),
scaled_rights = scale(rights),
scaled_health = scale(health) ,
scaled_social = scale(social) ,
scaled_life = scale(life.qual)
)
# Then run the regression model on the new dataframe:
regmodel <- lm(life.qual ~ emp_cat + edu_cat + scaled_security + scaled_rights + scaled_health + scaled_social , data = scaled_df)
# Summarise the regression model
stargazer(regmodel, type="text", title = "Regression Results")
# Then run the regression model on the new dataframe:
model2 <- lm(life.qual ~ emp_cat + edu_cat + secure_cat + rights_cat + health_cat + social_cat , data = survey.predictors2)
# Summarise the regression model
stargazer(model2, title = "Regression Results")
# Then run the regression model on the new dataframe:
model2 <- lm(life.qual ~ emp_cat + edu_cat + secure_cat + rights_cat + health_cat + social_cat , data = survey.predictors2)
# Summarise the regression model
stargazer(model2, type = "text", title = "Regression Results")
# Then run the regression model on the new dataframe:
model2 <- lm(life.qual ~ emp_cat + edu_cat + secure_cat + rights_cat + health_cat + social_cat , data = survey.predictors2)
# Summarise the regression model
stargazer(model2, type = "text", title = "Regression Results", align=TRUE)
# Then run the regression model on the new dataframe:
model2 <- lm(life.qual ~ emp_cat + edu_cat + secure_cat + rights_cat + health_cat + social_cat , data = survey.predictors2)
# Summarise the regression model
stargazer(model2, type = "text", title = "Regression Results", align=TRUE)
# Then run the regression model on the new dataframe:
model2 <- lm(life.qual ~ emp_cat + edu_cat + secure_cat + rights_cat + health_cat + social_cat , data = survey.predictors2)
# Summarise the regression model
stargazer(model2, type = "text", title = "Regression Results", font.size = "small")
# Then run the regression model on the new dataframe:
model2 <- lm(life.qual ~ emp_cat + edu_cat + secure_cat + rights_cat + health_cat + social_cat , data = survey.predictors2)
# Summarise the regression model
stargazer(model2, type = "html", title = "Regression Results")
# Then run the regression model on the new dataframe:
model2 <- lm(life.qual ~ emp_cat + edu_cat + secure_cat + rights_cat + health_cat + social_cat , data = survey.predictors2)
# Summarise the regression model
stargazer(model2, type = "text", title = "Regression Results")
# Then run the regression model on the new dataframe:
model2 <- lm(life.qual ~ emp_cat + edu_cat + secure_cat + rights_cat + health_cat + social_cat , data = survey.predictors2)
# Summarise the regression model
stargazer(model2, title = "Regression Results")
knit_with_parameters("~/GitHub/DATA4207-GroupProject/group-project-1.Rmd")
knit_with_parameters("~/GitHub/DATA4207-GroupProject/group-project-1.Rmd")
# Then run the regression model on the new dataframe:
model2 <- lm(life.qual ~ emp_cat + edu_cat + secure_cat + rights_cat + health_cat + social_cat , data = survey.predictors2)
# Summarise the regression model
stargazer(model2, title = "Regression Results")
# Then run the regression model on the new dataframe:
model2 <- lm(life.qual ~ emp_cat + edu_cat + secure_cat + rights_cat + health_cat + social_cat , data = survey.predictors2)
# Summarise the regression model
stargazer(model2, title = "Regression Results")
# Then run the regression model on the new dataframe:
model2 <- lm(life.qual ~ emp_cat + edu_cat + secure_cat + rights_cat + health_cat + social_cat , data = survey.predictors2)
# Summarise the regression model
stargazer(model2, title = "Regression Results")
# Then run the regression model on the new dataframe:
model2 <- lm(life.qual ~ emp_cat + edu_cat + secure_cat + rights_cat + health_cat + social_cat , data = survey.predictors2)
# Summarise the regression model
stargazer(model2, title = "Regression Results")
# Then run the regression model on the new dataframe:
model2 <- lm(life.qual ~ emp_cat + edu_cat + secure_cat + rights_cat + health_cat + social_cat , data = survey.predictors2)
# Summarise the regression model
stargazer(model2, title = "Regression Results")
# Then run the regression model on the new dataframe:
model2 <- lm(life.qual ~ emp_cat + edu_cat + secure_cat + rights_cat + health_cat + social_cat , data = survey.predictors2)
# Summarise the regression model
stargazer(model2, title = "Regression Results", font.size = "small")
##Dropping the non answers as this will no help our regression model as it provides no information.
survey.predictors2 = drop_na(survey.predictors, life.qual)
survey.predictors2 <- survey.predictors2[!(survey.predictors2$education == -2 |
survey.predictors2$employment == -2 |
survey.predictors2$security == -2 |
survey.predictors2$rights == -2 |
survey.predictors2$health == -2 |
survey.predictors2$social == -2 )  ,]
scaled_df <- survey.predictors2 %>%
mutate(
scaled_education = scale(education),
scaled_employment = scale(employment),
scaled_security = scale(security),
scaled_rights = scale(rights),
scaled_health = scale(health) ,
scaled_social = scale(social) ,
scaled_life = scale(life.qual)
)
# Then run the regression model on the new dataframe:
regmodel <- lm(life.qual ~ emp_cat + edu_cat + scaled_security + scaled_rights + scaled_health + scaled_social , data = scaled_df)
# Summarise the regression model
stargazer(regmodel, title = "Regression Results")
knitr::opts_chunk$set(echo = TRUE)
library(readxl)
library(dplyr)
library(ggplot2)
library(psych)
library(tidyr)
library(MASS)
library(stargazer)
# Then run the regression model on the new dataframe:
model2 <- lm(life.qual ~ emp_cat + edu_cat + secure_cat + rights_cat + health_cat + social_cat , data = survey.predictors2)
# Summarise the regression model
stargazer(model2, type = "text", title = "Regression Results", font.size = "small")
